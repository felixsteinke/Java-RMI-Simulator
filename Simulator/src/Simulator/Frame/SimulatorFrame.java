/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulator.Frame;

import Simulator.Frame.Dialog.Connect.ActionConnectToGamePort;
import Simulator.Frame.Dialog.Connect.ActionConnectToGameIP;
import Simulator.Frame.Dialog.Connect.ActionConnectToGame;
import Simulator.Frame.Dialog.Connect.ConnectSettings;
import Simulator.Frame.Dialog.Message.MessageDialog;
import simulator.data.container.RaceTrack;
import java.awt.EventQueue;
import java.awt.Point;
import java.io.File;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import simulator.data.container.Player;
import simulator.data.container.PlayerDatabase;
import simulator.interfaces.Client;
import simulator.interfaces.Connection;
import simulator.interfaces.Server;

/**
 *
 * @author 82stfe1bif
 */
public class SimulatorFrame extends javax.swing.JFrame {

    private static SimulatorFrame instanceSimulatorFrame;
    public DefaultListModel chatModel = new DefaultListModel();
    public DefaultListModel consoleList = new DefaultListModel();
    private SimulatorPanel simulatorPanel = new SimulatorPanel();
    public MessageDialog chatMessenger;
    public ConnectSettings connectDialog;
    private File inputFile;
    private RaceTrack raceTrackToPlay = null;
    private RaceTrack raceTrackToUpload = null;
    public PlayerDatabase playerDatabase = new PlayerDatabase();
    public boolean connected = false;
    public boolean gameIsRunning = false;
    
    public Player player = new Player();
    public Client ClientImpl = new ClientImpl();
    public Client clientExported;
    public Server server;
    public Registry registry;
    public Connection connection;
    
    public int playerCount;
    public String gameName;
    public String gameCode;
    

    public synchronized static SimulatorFrame getInstance() {                           //Object kann einmal erzeugt werden
        if (instanceSimulatorFrame == null) {
            instanceSimulatorFrame = new SimulatorFrame();
            //theInstance.initComponents(); 
            //als alternative methode
        }
        return instanceSimulatorFrame;
    }

    private SimulatorFrame() {
        instanceSimulatorFrame = this;
        setExtendedState(MAXIMIZED_BOTH);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane_Console = new javax.swing.JScrollPane();
        jList_Console = new javax.swing.JList<>();
        jPanel_Map = simulatorPanel;
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_Game = new javax.swing.JMenu();
        jMenuItem_LoadGame = new javax.swing.JMenuItem();
        jMenuItem_StartGame = new javax.swing.JMenuItem();
        jMenuItem_CloseGame = new javax.swing.JMenuItem();
        jMenu_Connection = new javax.swing.JMenu();
        jMenuItem_Connect = new javax.swing.JMenuItem();
        jMenuItem_Disconnect = new javax.swing.JMenuItem();
        jMenu_Messenger = new javax.swing.JMenu();
        jMenuItem_ShowMess = new javax.swing.JMenuItem();
        jMenu_CreateMap = new javax.swing.JMenu();
        jMenuItem_CreateFrame = new javax.swing.JMenuItem();
        jMenu_Exit = new javax.swing.JMenu();
        jMenuItem_ExitNow = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulator");

        jScrollPane_Console.setBorder(javax.swing.BorderFactory.createTitledBorder("Console"));

        jList_Console.setModel(consoleList);
        jScrollPane_Console.setViewportView(jList_Console);

        javax.swing.GroupLayout jPanel_MapLayout = new javax.swing.GroupLayout(jPanel_Map);
        jPanel_Map.setLayout(jPanel_MapLayout);
        jPanel_MapLayout.setHorizontalGroup(
            jPanel_MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel_MapLayout.setVerticalGroup(
            jPanel_MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
        );

        jMenu_Game.setText("Game");

        jMenuItem_LoadGame.setAction(new Simulator.Frame.ActionLoadGame());
        jMenuItem_LoadGame.setText("Load Game");
        jMenu_Game.add(jMenuItem_LoadGame);

        jMenuItem_StartGame.setAction(new Simulator.Frame.ActionStartGame());
        jMenuItem_StartGame.setText("Start Game");
        jMenu_Game.add(jMenuItem_StartGame);

        jMenuItem_CloseGame.setAction(new ActionCloseGame());
        jMenuItem_CloseGame.setText("Close Game");
        jMenu_Game.add(jMenuItem_CloseGame);

        jMenuBar1.add(jMenu_Game);

        jMenu_Connection.setText("Connection");

        jMenuItem_Connect.setAction(new ActionConnect());
        jMenuItem_Connect.setText("Connect");
        jMenu_Connection.add(jMenuItem_Connect);

        jMenuItem_Disconnect.setAction(new ActionDisconnectFromGame());
        jMenuItem_Disconnect.setText("Disconnect");
        jMenu_Connection.add(jMenuItem_Disconnect);

        jMenuBar1.add(jMenu_Connection);

        jMenu_Messenger.setText("Messenger");

        jMenuItem_ShowMess.setAction(new ActionShowMessage());
        jMenuItem_ShowMess.setText("Show Messenger");
        jMenu_Messenger.add(jMenuItem_ShowMess);

        jMenuBar1.add(jMenu_Messenger);

        jMenu_CreateMap.setText("Create Map");

        jMenuItem_CreateFrame.setAction(new ActionCreateMap());
        jMenuItem_CreateFrame.setText("Show Creation Frame");
        jMenu_CreateMap.add(jMenuItem_CreateFrame);

        jMenuBar1.add(jMenu_CreateMap);

        jMenu_Exit.setText("Exit");

        jMenuItem_ExitNow.setAction(new ActionExit());
        jMenuItem_ExitNow.setText("Exit now");
        jMenu_Exit.add(jMenuItem_ExitNow);

        jMenuBar1.add(jMenu_Exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane_Console, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_Map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane_Console, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public File getInputFile() {
        return inputFile;
    }

    public void setInputFile(File newInput) {
        File oldValue = this.inputFile;
        this.inputFile = newInput;
        firePropertyChange("Input", oldValue, this.inputFile);
    }

    public void setCsvData(File input) {
        this.raceTrackToPlay = new RaceTrack(input);
        repaint();
    }

    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList_Console;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_CloseGame;
    private javax.swing.JMenuItem jMenuItem_Connect;
    private javax.swing.JMenuItem jMenuItem_CreateFrame;
    private javax.swing.JMenuItem jMenuItem_Disconnect;
    private javax.swing.JMenuItem jMenuItem_ExitNow;
    private javax.swing.JMenuItem jMenuItem_LoadGame;
    private javax.swing.JMenuItem jMenuItem_ShowMess;
    private javax.swing.JMenuItem jMenuItem_StartGame;
    private javax.swing.JMenu jMenu_Connection;
    private javax.swing.JMenu jMenu_CreateMap;
    private javax.swing.JMenu jMenu_Exit;
    private javax.swing.JMenu jMenu_Game;
    private javax.swing.JMenu jMenu_Messenger;
    private javax.swing.JPanel jPanel_Map;
    private javax.swing.JScrollPane jScrollPane_Console;
    // End of variables declaration//GEN-END:variables
    
    public RaceTrack getRaceTrackToPlay() {
        return this.raceTrackToPlay;
    }

    public void setRaceTrackToPlay(RaceTrack raceTrackToPlay) {
        this.raceTrackToPlay = raceTrackToPlay;
    }

    public RaceTrack getRaceTrackToUpload() {
        return raceTrackToUpload;
    }

    public void setRaceTrackToUpload(RaceTrack raceTrackToUpload) {
        this.raceTrackToUpload = raceTrackToUpload;
    }
    
    
}
